data_frame_all <- read.csv(file.choose())
left <- c()
keywords <- c('influenza', 'flushot')
for(i in c(1:2)){
data_frame <- data_frame_all[which(data_frame$queryMetadata.query == c(keywords[i])), ]
state_name_df <- as.data.frame(state.name)
colnames(state_name_df) <- c('Var1')
freq_data <- as.data.frame(table(data_frame$state))
freq_data <-merge(state_name_df, freq_data, by='Var1', all.x = TRUE)
freq_data$Freq[which(is.na(freq_data$Freq))] <- 0
states <- freq_data$Var1
freq <- freq_data$Freq
code <- fips(states)
value <-freq
df_left <- data.frame("fips" = code, "Frequency" = value)
df_left <- df_left[which(!is.na(df_left$fips)), ]
left[i] <- plot_usmap(data = df_left, values = "Frequency", lines = "black")+
scale_fill_gradient2(low="#ffffff", mid="red", high="darkred",midpoint=(max(df_left$Frequency)+min(df_left$Frequency))/2,
limits=range(df_left$Frequency),name = "tweet count")+
labs(title = paste("Fequency of flu related tweets for keyword \n", keywords[i], " influenza from each state"))+
theme(legend.position = "right", plot.title = element_text(hjust=0.2))
}
library(datasets)
library(gridExtra)
library(ggplot2)
library(usmap)
library(ggplot2)
library(usmap)
library(ggplot2)
library(dplyr)
data_frame_all <- read.csv(file.choose())
left <- c()
keywords <- c('influenza', 'flushot')
for(i in c(1:2)){
data_frame <- data_frame_all[which(data_frame$queryMetadata.query == c(keywords[i])), ]
state_name_df <- as.data.frame(state.name)
colnames(state_name_df) <- c('Var1')
freq_data <- as.data.frame(table(data_frame$state))
freq_data <-merge(state_name_df, freq_data, by='Var1', all.x = TRUE)
freq_data$Freq[which(is.na(freq_data$Freq))] <- 0
states <- freq_data$Var1
freq <- freq_data$Freq
code <- fips(states)
value <-freq
df_left <- data.frame("fips" = code, "Frequency" = value)
df_left <- df_left[which(!is.na(df_left$fips)), ]
if(i==1){
left1 <- plot_usmap(data = df_left, values = "Frequency", lines = "black")+
scale_fill_gradient2(low="#ffffff", mid="red", high="darkred",midpoint=(max(df_left$Frequency)+min(df_left$Frequency))/2,
limits=range(df_left$Frequency),name = "tweet count")+
labs(title = paste("Fequency of flu related tweets for keyword \n", keywords[i], " influenza from each state"))+
theme(legend.position = "right", plot.title = element_text(hjust=0.2))
}
if(i==2){
left2 <- plot_usmap(data = df_left, values = "Frequency", lines = "black")+
scale_fill_gradient2(low="#ffffff", mid="red", high="darkred",midpoint=(max(df_left$Frequency)+min(df_left$Frequency))/2,
limits=range(df_left$Frequency),name = "tweet count")+
labs(title = paste("Fequency of flu related tweets for keyword \n", keywords[i], " influenza from each state"))+
theme(legend.position = "right", plot.title = element_text(hjust=0.2))
}
}
# Comment or uncomment as needed
heatmapData <- read.csv(file.choose())
heatmapData <- heatmapData[grep("Level ", heatmapData$ACTIVITY.LEVEL),]
heatmapData$LevelInt <- as.integer(substr(heatmapData$ACTIVITY.LEVEL, 7, 9))
agreegated_data <- aggregate(heatmapData, by = list(heatmapData$STATENAME), FUN = mean)
agreegated_data$LevelInt <- ceiling(agreegated_data$LevelInt)
agreegated_data$LevelInt <- paste("Level", agreegated_data$LevelInt)
code <- fips(agreegated_data[, c('Group.1')])
value <- agreegated_data$LevelInt
df <- data.frame("fips" = code, "LevelInt" = value)
pal <- c(
"Level 10" = "#CC0000",
"Level 9" = "#FA4F00",
"Level 8" = "#FC8200",
"Level 7" = "#FCB100",
"Level 6" = "#F7DF00",
"Level 5" = "#E0F500",
"Level 4" = "#BAF700",
"Level 3" = "#8CF700",
"Level 2" = "#5BF700",
"Level 1" = "#00C200",
"Level 0" = "#ffffff"
)
right <- plot_usmap(data = df, values = "LevelInt", lines = "black")+
scale_fill_manual(values = pal, limits = names(pal), name='ILI Activity Level')+
labs(title = "Average activity level data of each state \n from week 40, 2018 to week 4, 2019")+
theme(legend.position = "right", plot.title = element_text(hjust=0.7))
grid.arrange(left1,right, ncol=2)
grid.arrange(left2,right, ncol=2)
keywords[i]
data_frame
data_frame_all[which(data_frame$queryMetadata.query == c('flushot')), ]
data_frame_all <- read.csv(file.choose())
data_frame_all[which(data_frame$queryMetadata.query == c('flushot')), ]
data_frame_all
data_frame_all[which(data_frame$queryMetadata.query == 'flushot'), ]
library(reshape2)
library(ggplot2)
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
dummy_data <- data.frame('REGION.TYPE' ='National', 'REGION' = 'X', 'YEAR' = 2019,  'WEEK' = c(9:18), 'TOTAL.SPECIMENS'= NA, 'TOTAL.A'= NA, 'TOTAL.B'=NA, 'PERCENT.POSITIVE'=NA, 'PERCENT.A'=NA, 'PERCENT.B'=NA) #'National', 'X', 2019, c(9:18), 0,0,0,0,0,0 )
clinicalLabs <- rbind(clinicalLabs, dummy_data)
dfm_clinical_bar <- melt(clinicalLabs[,c('WEEK', 'TOTAL.A', 'TOTAL.B', 'PERCENT.POSITIVE', 'PERCENT.A', 'PERCENT.B')],id.vars = 1)
dfm_clinical_bar$WEEK <- factor(dfm_clinical_bar$WEEK, levels = dfm_clinical_bar[which(dfm_clinical_bar$variable == 'TOTAL.A'), ]$WEEK)
percent_positive <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE'), ]
percent_positive$value <- percent_positive$value/0.0025
percent_A <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.A'), ]
percent_A$value <- percent_A$value/0.0025
percent_B <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.B'), ]
percent_B$value <- percent_B$value/0.0025
line_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE' | dfm_clinical_bar$variable == 'PERCENT.A' | dfm_clinical_bar$variable == 'PERCENT.B'), ]
line_data$value <- line_data$value/ 0.0025
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X), 2)]
labels_X_modified <- c()
for (label in labels_X) {
labels_X_modified <- c(labels_X_modified, c(label," "))
}
bar_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable =='TOTAL.A' | dfm_clinical_bar$variable =='TOTAL.B'), ]
legend_labels <- c("TOTAL.A" = "A", "TOTAL.B" = "B", "PERCENT.A" = "% positive Flu A", "PERCENT.B" = "% positive Flu B", "PERCENT.POSITIVE" = "Percent positive")
bargraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.A" = "#FFFFFF", "PERCENT.B" = "#FFFFFF", "PERCENT.POSITIVE" = "#FFFFFF")
linegraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.B" = "#ff3333", "PERCENT.A" = "#ff00ff", "PERCENT.POSITIVE" = "#000000")
ggplot(dfm_clinical_bar,  aes(x = WEEK,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 14000), breaks = seq(0,14000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(labels = labels_X_modified, expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
clinicalLabs
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
clinicalLabs <- rbind(clinicalLabs, dummy_data)
dfm_clinical_bar <- melt(clinicalLabs[,c('WEEK', 'TOTAL.A', 'TOTAL.B', 'PERCENT.POSITIVE', 'PERCENT.A', 'PERCENT.B')],id.vars = 1)
dfm_clinical_bar$WEEK <- factor(dfm_clinical_bar$WEEK, levels = dfm_clinical_bar[which(dfm_clinical_bar$variable == 'TOTAL.A'), ]$WEEK)
percent_positive <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE'), ]
percent_positive$value <- percent_positive$value/0.0025
clinicalLabs
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
clinicalLabs
dfm_clinical_bar <- melt(clinicalLabs[,c('WEEK', 'TOTAL.A', 'TOTAL.B', 'PERCENT.POSITIVE', 'PERCENT.A', 'PERCENT.B')],id.vars = 1)
dfm_clinical_bar$WEEK <- factor(dfm_clinical_bar$WEEK, levels = dfm_clinical_bar[which(dfm_clinical_bar$variable == 'TOTAL.A'), ]$WEEK)
percent_positive <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE'), ]
percent_positive$value <- percent_positive$value/0.0025
percent_A <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.A'), ]
percent_A$value <- percent_A$value/0.0025
percent_B <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.B'), ]
percent_B$value <- percent_B$value/0.0025
line_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE' | dfm_clinical_bar$variable == 'PERCENT.A' | dfm_clinical_bar$variable == 'PERCENT.B'), ]
line_data$value <- line_data$value/ 0.0025
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X), 2)]
labels_X_modified <- c()
for (label in labels_X) {
labels_X_modified <- c(labels_X_modified, c(label," "))
}
bar_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable =='TOTAL.A' | dfm_clinical_bar$variable =='TOTAL.B'), ]
legend_labels <- c("TOTAL.A" = "A", "TOTAL.B" = "B", "PERCENT.A" = "% positive Flu A", "PERCENT.B" = "% positive Flu B", "PERCENT.POSITIVE" = "Percent positive")
bargraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.A" = "#FFFFFF", "PERCENT.B" = "#FFFFFF", "PERCENT.POSITIVE" = "#FFFFFF")
linegraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.B" = "#ff3333", "PERCENT.A" = "#ff00ff", "PERCENT.POSITIVE" = "#000000")
ggplot(dfm_clinical_bar,  aes(x = WEEK,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 14000), breaks = seq(0,14000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(labels = labels_X_modified, expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
labels_X
clinicalLabs
# Graph 2
library(reshape2)
library(ggplot2)
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X), 2)]
labels_X_modified <- c()
for (label in labels_X) {
labels_X_modified <- c(labels_X_modified, c(label," "))
}
dfm_clinical_bar$XLabels = factor(labels_X_modified, levels = labels_X_modified)
labels_X_modified
labels_X
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X))]
labels_X
labels_X
labels_X <- labels_X[seq(1, length(labels_X))]
labels_X_modified <- c()
# for (label in labels_X) {
#   labels_X_modified <- c(labels_X_modified, c(label," "))
# }
dfm_clinical_bar$XLabels = factor(labels_X_modified, levels = labels_X_modified)
dfm_clinical_bar$XLabels
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X))]
labels_X
dfm_clinical_bar$XLabels = factor(labels_X, levels = labels_X)
dfm_clinical_bar$XLabels
dfm_clinical_bar <- melt(clinicalLabs[,c('XLabels', 'TOTAL.A', 'TOTAL.B', 'PERCENT.POSITIVE', 'PERCENT.A', 'PERCENT.B')],id.vars = 1)
# Graph 2
library(reshape2)
library(ggplot2)
clinicalLabs <- read.csv(file.choose(), skip =1)
clinicalLabs <- clinicalLabs[which((clinicalLabs$WEEK >= 4 & clinicalLabs$YEAR == 2018) | (clinicalLabs$WEEK <= 4 & clinicalLabs$YEAR == 2019)), ]
week_below_10 <-  clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
clinicalLabs[which(clinicalLabs$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(clinicalLabs$YEAR, clinicalLabs$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X))]
clinicalLabs$XLabels = factor(labels_X, levels = labels_X)
dfm_clinical_bar <- melt(clinicalLabs[,c('XLabels', 'TOTAL.A', 'TOTAL.B', 'PERCENT.POSITIVE', 'PERCENT.A', 'PERCENT.B')],id.vars = 1)
#dfm_clinical_bar$WEEK <- factor(dfm_clinical_bar$WEEK, levels = dfm_clinical_bar[which(dfm_clinical_bar$variable == 'TOTAL.A'), ]$WEEK)
percent_positive <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE'), ]
percent_positive$value <- percent_positive$value/0.0025
percent_A <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.A'), ]
percent_A$value <- percent_A$value/0.0025
percent_B <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.B'), ]
percent_B$value <- percent_B$value/0.0025
line_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable == 'PERCENT.POSITIVE' | dfm_clinical_bar$variable == 'PERCENT.A' | dfm_clinical_bar$variable == 'PERCENT.B'), ]
line_data$value <- line_data$value/ 0.0025
bar_data <- dfm_clinical_bar[which(dfm_clinical_bar$variable =='TOTAL.A' | dfm_clinical_bar$variable =='TOTAL.B'), ]
legend_labels <- c("TOTAL.A" = "A", "TOTAL.B" = "B", "PERCENT.A" = "% positive Flu A", "PERCENT.B" = "% positive Flu B", "PERCENT.POSITIVE" = "Percent positive")
bargraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.A" = "#FFFFFF", "PERCENT.B" = "#FFFFFF", "PERCENT.POSITIVE" = "#FFFFFF")
linegraph_colors <- c("TOTAL.A" = "#FEE053", "TOTAL.B" = "#2E6B2F", "PERCENT.B" = "#ff3333", "PERCENT.A" = "#ff00ff", "PERCENT.POSITIVE" = "#000000")
ggplot(dfm_clinical_bar,  aes(x = XLabels,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 14000), breaks = seq(0,14000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(labels = labels_X_modified, expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
ggplot(clinicalLabs,  aes(x = XLabels,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 28000), breaks = seq(0,28000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(labels = clinicalLabs$XLabels, expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
ggplot(clinicalLabs,  aes(x = XLabels,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 28000), breaks = seq(0,28000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(labels = clinicalLabs$XLabels[c(T, F)], expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
clinicalLabs$XLabels[c(T, F)]
ggplot(clinicalLabs,  aes(x = XLabels,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 28000), breaks = seq(0,28000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(breaks = levels(clinicalLabs$XLabels[c(T, F)]), expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
ggplot(clinicalLabs,  aes(x = XLabels,y = value, group = variable, fill = variable, colour=variable))+
geom_bar(data =bar_data, stat = "identity")+
geom_line( data = percent_positive)+
geom_line( linetype = "dotted", data = percent_A)+
geom_line( linetype = "dotted", data = percent_B)+
scale_color_manual(values=linegraph_colors, labels= legend_labels)+
scale_fill_manual( values = bargraph_colors, labels= legend_labels)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0025, name = "Percent Positive", breaks = seq(0,35, by=5)),
limits = c(0, 28000), breaks = seq(0,28000, by=2000), expand = c(0, 0))+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(breaks = levels(clinicalLabs$XLabels)[c(T, F)], expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
library(ggplot2)
library(reshape2)
publicData <- read.csv(file.choose(), skip = 1)
publicData <- publicData[which((publicData$WEEK >= 4 & publicData$YEAR == 2018) | (publicData$WEEK <= 4 & publicData$YEAR == 2019)), ]
week_below_10 <-  publicData[which(publicData$WEEK < 10), ]$WEEK
week_below_10 <- paste("0", week_below_10, sep="")
publicData[which(publicData$WEEK < 10), ]$WEEK <- week_below_10
labels_X <- gsub(" ", "", paste(publicData$YEAR, publicData$WEEK), fixed = TRUE)
labels_X <- labels_X[seq(1, length(labels_X))]
publicData$XLabels = factor(labels_X, levels = labels_X)
dfm <- melt(publicData[,c('XLabels', 'A..Subtyping.not.Performed.',
'A..2009.H1N1.', 'A..H3.', 'H3N2v', 'B', 'BVic', 'BYam')],id.vars = 1)
legend_labels <- c("A..Subtyping.not.Performed." = "A (subtyping not performed)",
"A..2009.H1N1." = "A (H1N1)pdm09",
"A..H3." = "A (H3N2)",
"H3N2v" = "H3N2v",
"B" = "B (lineage not performed)",
"Bvic" = "B (Victoria Lineage)",
"BYam" = "B (Yamagata Lineage)")
legend_colors <- c("A..Subtyping.not.Performed." = "#FC0D0F",
"A..2009.H1N1." = "#ff9900",
"A..H3." = "#C3F71E",
"H3N2v" = "#0C8833",
"B" = "#00C200",
"Bvic" = "#E29010",
"BYam" = "#66B41B")
ggplot(dfm,aes(x = XLabels,y = value)) +
geom_bar(aes(fill = variable),stat = "identity")+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, \n National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(breaks = levels(dfm$XLabels)[c(T, F)], expand = c(0, 0))+
scale_y_continuous(limits = c(0, 3000), breaks = seq(0,3000, by=500), expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
scale_fill_manual(values = legend_colors, labels= legend_labels)+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))+
guides(fill=guide_legend(title=""))
dfm
labels_X
ggplot(dfm,aes(x = XLabels,y = value)) +
geom_bar(aes(fill = variable),stat = "identity")+
labs(title = "Influenza Positive Tests Reported to CDC by U.S Clinical Laborities, \n National Summary, 2018-2019 Season", y = "Number of Positive Specimens", x = "Week", linetype = "My Line Name")+
theme(panel.background = element_rect(fill = 'white', colour = 'black'))+
scale_x_discrete(breaks = levels(dfm$XLabels)[c(T, F)], expand = c(0, 0))+
scale_y_continuous(limits = c(0, 6000), breaks = seq(0,6000, by=500), expand = c(0, 0))+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
scale_fill_manual(values = legend_colors, labels= legend_labels)+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))+
guides(fill=guide_legend(title=""))
library(ggplot2)
library(reshape2)
library(dplyr)
library(shiny)
ped_death <- read.csv(file.choose(), skip = 1)
ped_death
library(dplyr)
out_patient_data <- read.csv(file.choose(), skip = 1)
df <- out_patient_data[, c('X..WEIGHTED.ILI','WEEK', 'YEAR')]
df$WEEK <- factor(df$WEEK, levels = unique(df$WEEK[match(40,df$WEEK): length(df$WEEK)]), ordered = TRUE)
years <- sort(unique(df$YEAR))
# Preparing the data
i<-1
data_total <- data.frame()
while (i < length(years)) {
if(years[i] == 2010 ||years[i] == 2012 || years[i] == 2013) { i = i+1; next;}
if(i +1 > length(years)) break;
data_temp1 <- df[which((df$YEAR == years[i] & df$WEEK >=40 & df$WEEK <= 52)), ]
data_temp2 <- df[which((df$YEAR == years[i+1]& df$WEEK >= 1 & df$WEEK != 53)), ]
data_temp <- rbind(data_temp1, data_temp2)
data_temp$season <- paste(str_trim(toString(years[i])), "-", str_trim(toString(years[i+1] - 2000)), " season")
data_total <- rbind(data_total, data_temp)
i = i+1
}
national_baseline <- data.frame("WEEK" = df$WEEK, 'X..WEIGHTED.ILI' = 2.2, 'YEAR'=2019, 'season' = 'National Baseline' )
data_total <- rbind(data_total, national_baseline)
# Plotting the graph
plot <- ggplot(data=data_total, aes(x = data_total$WEEK, y = data_total$X..WEIGHTED.ILI,
fill = data_total$season, shape = data_total$season,
linetype = data_total$season))+
geom_line(data=data_total, aes(color=data_total$season, group = data_total$season))+
geom_point(data = data_total[which(data_total$season == '2018-19 season'), ])+
scale_colour_manual(name = "", values = rainbow(8), guide = "legend")+
scale_fill_manual(name = "", values = rainbow(8), guide = "legend")+
scale_shape_manual(name = "", values = c(NA, NA, NA, NA, NA, NA,
24, NA), guide = "legend")+
scale_linetype_manual(name = "", values = c("solid", "solid", "solid",
"solid", "solid", "solid", "solid", "dashed")
, guide = "legend")+
scale_y_continuous(limits = c(0, 8), breaks = seq(0, 8, by = 1),
name = "% of Visits for ILI", expand = c(0, 0))+
scale_x_discrete("Week", breaks = levels(data_total$WEEK)[c(T,F)], expand = c(0, 0))+
labs(title = "Percentage of visits for Influenza-like Illness (ILI) reported by the U.S. Outpatient Influenza-like Illness Surveillance Network (ILINet),
\n Weekly National Summary, 2018-2019 and Selected Previous Seasons")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
legend.box.background = element_rect(fill = 'white', colour = "black", size=2),
panel.background = element_rect(fill = 'white', colour = 'black'),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
plot
library(dplyr)
out_patient_data <- read.csv(file.choose(), skip = 1)
df <- out_patient_data[, c('X..WEIGHTED.ILI','WEEK', 'YEAR')]
df$WEEK <- factor(df$WEEK, levels = unique(df$WEEK[match(40,df$WEEK): length(df$WEEK)]), ordered = TRUE)
years <- sort(unique(df$YEAR))
# Preparing the data
i<-1
data_total <- data.frame()
while (i < length(years)) {
if(years[i] == 2010 ||years[i] == 2012 || years[i] == 2013) { i = i+1; next;}
if(i +1 > length(years)) break;
data_temp1 <- df[which((df$YEAR == years[i] & df$WEEK >=40 & df$WEEK <= 52)), ]
data_temp2 <- df[which((df$YEAR == years[i+1]& df$WEEK >= 1 & df$WEEK != 53)), ]
data_temp <- rbind(data_temp1, data_temp2)
data_temp$season <- paste(str_trim(toString(years[i])), "-", str_trim(toString(years[i+1] - 2000)), " season")
data_total <- rbind(data_total, data_temp)
i = i+1
}
national_baseline <- data.frame("WEEK" = df$WEEK, 'X..WEIGHTED.ILI' = 2.2, 'YEAR'=2019, 'season' = 'National Baseline' )
data_total <- rbind(data_total, national_baseline)
plot <- ggplot(data=data_total, aes(x = data_total$WEEK, y = data_total$X..WEIGHTED.ILI,
fill = data_total$season, shape = data_total$season,
linetype = data_total$season))+
geom_line(data=data_total, aes(color=data_total$season, group = data_total$season))+
geom_point(data = data_total[which(data_total$season == '2018-19 season'), ])+
scale_colour_manual(name = "", values = rainbow(8), guide = "legend")+
scale_fill_manual(name = "", values = rainbow(8), guide = "legend")+
scale_shape_manual(name = "", values = c(NA, NA, NA, NA, NA, NA,
24, NA), guide = "legend")+
scale_linetype_manual(name = "", values = c("solid", "solid", "solid",
"solid", "solid", "solid", "solid", "dashed")
, guide = "legend")+
scale_y_continuous(limits = c(0, 8), breaks = seq(0, 8, by = 1),
name = "% of Visits for ILI", expand = c(0, 0))+
scale_x_discrete("Week", breaks = levels(data_total$WEEK)[c(T,F)], expand = c(0, 0))+
labs(title = "Percentage of visits for Influenza-like Illness (ILI) reported by the U.S. Outpatient Influenza-like Illness Surveillance Network (ILINet),
\n Weekly National Summary, 2018-2019 and Selected Previous Seasons")+
theme(axis.line = element_line(colour = "#000000", linetype = "solid",size = 0.4),
legend.box.background = element_rect(fill = 'white', colour = "black", size=2),
panel.background = element_rect(fill = 'white', colour = 'black'),
plot.title = element_text(hjust=0.5, face="bold", size=14),
axis.title.x = element_text(face="bold"),
axis.title.y = element_text(face="bold"),
legend.position = c(0.8,0.8))
