plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales <- read.table(file.choose(),header = T)
barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside=T, col=rainbow(5))
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=2)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=1)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
sales2<-rpois(12,34)
par(bg="cornsilk")
plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
sales2<-rpois(12,34)
par(bg="cornsilk")
lines(sales2, type = "o", lty = 2, pch=22, col="red")
grid(nx=NA, ny=NULL)
legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
sales <- read.table(file.choose(),header = T)
barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside=T, col=rainbow(5))
fn<-boxplot(sales,col=c("orange","green"))$stats
text(1.45, fn[3,2], paste("Median =", fn[3,2]), adj=0, cex=.7)
text(0.45, fn[3,1],paste("Median =", fn[3,1]), adj=0, cex=.7)
grid(nx=NA, ny=NULL)
sales <- read.table(file.choose(),header = T)
sales
barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside=T, col=rainbow(5))
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
fb1<-read.csv(file.choose())
aapl1<-read.csv(file.choose())
fb1
appl1
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
fb1<-read.csv(file.choose())
appl1<-read.csv(file.choose())
fb1
appl1
par(bg="cornsilk")
plot(aapl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
fb1<-read.csv(file.choose())
appl1<-read.csv(file.choose())
fb1
appl1
par(bg="cornsilk")
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
lines(sales2, type = "o", lty = 2, pch=22, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
fb1<-read.csv(file.choose())
fb1<-read.csv(file.choose())
# sales1<-c(12,14,16,29,30,45,19,20,16, 19, 34, 20)
# sales2<-rpois(12,34)
# par(bg="cornsilk")
# plot(sales1, col = "blue", type = "o", ylim = c(0,100), xlab = "Month", ylab = "Sales")
# sales2<-rpois(12,34)
# par(bg="cornsilk")
# lines(sales2, type = "o", lty = 2, pch=22, col="red")
# grid(nx=NA, ny=NULL)
# legend("topright", inset=.05, c("Sales1","Sales2"), fill=c("blue","red"), horiz=TRUE)
#
# sales <- read.table(file.choose(),header = T)
# sales
# barplot(as.matrix(sales), main="Sales Data", ylab= "Total",beside=T, col=rainbow(5))
#
# fn<-boxplot(sales,col=c("orange","green"))$stats
# text(1.45, fn[3,2], paste("Median =", fn[3,2]), adj=0, cex=.7)
# text(0.45, fn[3,1],paste("Median =", fn[3,1]), adj=0, cex=.7)
# grid(nx=NA, ny=NULL)
#
fb1<-read.csv(file.choose())
appl1<-read.csv(file.choose())
fb1
appl1
par(bg="cornsilk")
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
legend("topright", inset=.05, c("Apple","Facebook"), fill=c("blue","red"), horiz=TRUE)
#Just study the distribution of the adjusted close of the stock price of Apple.
hist(aapl1$Adj.Close, col=rainbow(8))
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
par(bg="cornsilk")
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,100), xlab="Days", ylab="Price" )
appl1$Adj.Close
plot(appl1$Adj.Close, col="blue", type="o", ylim=c(0,200), xlab="Days", ylab="Price" )
lines(fb1$Adj.Close, type="o", pch=22, lty=2, col="red")
data()
#Observe the data sets available for explorations.
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(uspop)
plot(uspop)
data()
summary(mpg)
attach(mpg)
head(mpg)
summary(mpg)
data()
#Observe the data sets available for explorations.
attach(mpg)
head(mpg)
summary(mpg)
summary(mpg)
data()
#Observe the data sets available for explorations.
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
#Observe the data sets available for explorations.
attach(mpg)
data()
#Observe the data sets available for explorations.
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(uspop)
plot(uspop)
data()
#Observe the data sets available for explorations.
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(uspop)
plot(uspop)
library(ggplot2)
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
data()
#Observe the data sets available for explorations.
library(ggplot2)
attach(mpg)
head(mpg)
summary(mpg)
#after analysis remove the data from the memory
detach(mpg)
install.packages("ggplot2")
library(ggplot2)
attach(mpg)
head(mpg)
summary(mpg)
install.packages("http://vincentarelbundock.github.io/Rdatasets/datasets.html")
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(uspop)
plot(uspop)
#Also explore newer data sets in
library (help=datasets)
library(datasets)
head(uspop)
plot(uspop)
library("ggmap")
library("maptools")
library(maps)
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
install.packages(c("ggmap", "maptools", "maps", "mapsapi"))
library("ggmap")
library("maptools")
library(maps)
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
install.packages("devtools")
#register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
library("ggmap")
library("maptools")
library("maps")
#register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyC-zhXn2BMHdPBpSpuorjabGX-W3nRTc7Q')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyA8MpauNAh20x2gvMiy2pkfwUOf_SgF9EY')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyB8DHBSlxOz3AufMnrFA04taZ2Tf6dvNYI')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyDwoLX7-qA1DnGFweLhsMAy6d5uyWjUUrc')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyARIRss07U7PpXOz0ZDM6r75AfuG2nYios')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = AIzaSyARIRss07U7PpXOz0ZDM6r75AfuG2nYios)
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = AIzaSyARIRss07U7PpXOz0ZDM6r75AfuG2nYios)
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyARIRss07U7PpXOz0ZDM6r75AfuG2nYios')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyBTCdAJYL19du1UWJFI1vzqpxiKksX-8I0')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyBTCdAJYL19du1UWJFI1vzqpxiKksX-8I0')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyBTCdAJYL19du1UWJFI1vzqpxiKksX-8I0')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyBTCdAJYL19du1UWJFI1vzqpxiKksX-8I0')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyBTCdAJYL19du1UWJFI1vzqpxiKksX-8I0')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCg_VUNB8jbTN5tQjdUCEBig-QwsLlhx2s')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
library("boot", lib.loc="C:/Program Files/R/R-3.5.2/library")
detach("package:boot", unload=TRUE)
library("ggmap")
library("maptools")
library("maps")
register_google(key = 'AIzaSyCg_VUNB8jbTN5tQjdUCEBig-QwsLlhx2s')
#devtools::install_github("dkahle/ggmap") #,ref = "tidyup")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Lima, Peru", "Johannesbury, SA")
ll.visited <- geocode(visited)
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=36)
attach(mtcars)
head(mtcars)
plot(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
plot(mtcars[c(1,3,4,6)], main="MTCARS Data")
plot(mtcars[c(1,3,4,6)], col=rainbow(5),main="MTCARS Data")
detach(mtcars)
mtcars
tail(mtcars)
mtcars[c(1,3,4,5,6)]
plot(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
plot(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
plot(mtcars[c(1,3,4,5,6)], main="MTCARS")
plot(mtcars[c(1,3,4,5,6)], main="MTCARS Data")
plot(mtcars[c(1,3,4,6)], col=rainbow(5),main="MTCARS Data")
ggplot(mtcars, aes(x=mpg, y=disp))
ggplot(mtcars, aes(x=mpg, y=disp)) + geom_point()
ggplot(mtcars, aes(x=mpg, y=disp)) + geom_jitter()
ggplot(mtcars, aes(x=mpg, y=disp)) + geom_point()
